#!/bin/bash

env=prod
GIT_DIR=~/src/terraform/${env}

BASE_DIR=~/drift
LOG_DIR=${BASE_DIR}/logs
LOG_FILE=log_$(date +%Y%m%d)
LOG=${LOG_DIR}/${LOG_FILE}

OUT_DIR=${BASE_DIR}/tmp

REPORT_DIR=${BASE_DIR}/report
REPORT_FILE=report_$(date +%Y%m%d)
REPORT=${REPORT_DIR}/${REPORT_FILE}

# Make dirs for reporting, and data capture.
mkdir -p ${BASE_DIR} ${OUT_DIR} ${LOG_DIR} ${REPORT_DIR}

# 1.) loop through all tfstates in terraform repo.
# 2.) For each, try a terraform plan and report the results.
# 3.) Remove certain known problems from the output.
#
# TODO: add auto cleanup of lock files when drift detector
# is killed with a sigQUIT. 
#
cd ${GIT_DIR}
# list of dirs that contain .hcl files
TFSTATES=$( find . -name *.hcl | \
    grep -v '\.terragrunt' | \
    sed -e 's/\/terragrunt.hcl$//' | \
    sed -e 's/^\.\///' | sort)

for dir in $(echo ${TFSTATES}); do

    DATE=$(date)
    echo scanning $dir... | tee ${LOG}
    cd ${GIT_DIR}/${dir}

    # run terragrunt, but remove chatty messages.
    terragrunt init -input=false 2> \
        >(grep -v "\[terragrunt\]" >&2) \
        > /dev/null 2>&1

    if [ $? -ne 0 ]; then
        echo "${DATE}: ${dir}: failed terraform init" | tee -a ${LOG}
        continue
    else
        echo "${DATE}: ${dir}: successfully initialized." | tee -a ${LOG}
    fi

    OUT_FILE=out_${dir}_$(date +%Y%m%d)
    OUT=${OUT_DIR}/${OUT_FILE}
    # Run terragrunt wrapper, but filter out chatty messages.
    terragrunt plan -detailed-exitcode -input=false -out ${OUT} 2> \
        >(grep -v "\[terragrunt\]" \
        >&2) > /dev/null 2>&1
    EXIT_CODE=$?

    if [ $EXIT_CODE -eq 0 ]; then
        echo "$(date): $dir: No drift detected!" | tee -a ${LOG}
    elif [ $EXIT_CODE -eq 1 ]; then
        echo "$(date): $dir: Error running terraform!" | tee -a ${LOG}
    elif [ $EXIT_CODE -eq 2 ]; then
        echo -ne "$(date): $dir: Drift detected!\n\n" | \
            tee -a ${REPORT}
        terragrunt show ${OUT} 2> >(grep -v "\[terragrunt\]" >&2) | \
            grep -vE '(aws_lambda|data\.archive_file|null_resource)' | \
            tee -a ${REPORT}
    else
        echo 'WARNING: terraform exited with status > 2' | tee -a ${LOG}
    fi

    # clean up outfile.
    rm -rf ${OUT}
done
